Alpyca Device - Sample/Template Alpaca (Rotator device)
-------------------------------------------------------
28-Dec-2022 Starting to make notes. I got quite a ways along with this. Now I want to set up
to do the docs ion Sphinx. I don't plan to extract info from docstrings just to keep the
code from being cluttered. I have put comments into the source in plain # form.
Now to set up for making Sphinx docs. What a process. Although I made the Alpyca docs,
and a start on the ASCOM Master docs, using Sphinx and rinohtype, it was so full of crazy
tinkering and problem hunting I just wanted to forget it all Hance these notes so I can
save myself from a fresh round of (repeat) frustrations.

So starting with the RBD-Notes from the Alpyca project and using VSCode for RST writing:

* (21-Jul-2022) Install the Sphinx-related packages into the .venv get all of the sphinx and
rinoh pieces into the .venv because the reStructuredText extension depends on the esbonio
language server, and that is actually real-time rendering the document at design time!
This led to several hours of installing shit.
  ==== AHHHH ====
  Look at the docs/source/conf.py and those things are in the extensions. REDO THE VENV... AGAIN!!!
* This time I created the venv python -m venv .venv and restarted VSCode. It found the .venv OK. Then I followed
  the prompts to install docutils and esbonio, RESTART, then again via "Problems" to install rinohtype RESTART
  then again to get sphinx_rtd_theme, which BACK-REVVED DOCUTILS to 0.17.1. Damn. These things are in the Sphinx
  conf.py file, which was getting confused with mine before I renamed it.
* ==== HOORAY ==== The reStructruredText extension is working!! It found the junk .rst files I put there as place
  holders.  Now I need to clean up the Sphinx conf.py ... done.
* Moved over to the RPi. I installed Sphinx, the rsStructuredText VSCode plugin popped up installs for docutils,
  and esbonio. I restarted, esbonio can't install the rinoh.frontend.sphinx plugin. I installed rinohtype
  pip install rinohtype. No luck even after starting VSCode. So I went to https://github.com/brechtm/rinohtype
  and found how to install the latest version via pip/GitHub:
    https://github.com/brechtm/rinohtype
  This installed markdown-it-py-2.1.0 mdit-py-plugins-0.3.3 mdurl-0.1.2 myst-parser-0.18.1 pyyaml-6.0
  rinohtype-0.5.5, and removed rinohtype-0.5.3. No luck. wtf. It's not showing on the pip list either.
  HOW WEIRD - Now same deal with sphinx_rtd_theme. So I used the Pip Manager to install them. Well now
  rinoh stuff shows in pip manager but not in the pip list????? Now Esbonio/pip succeeds but without
* Making HTML docs!!! I wanted to disable the "hyperlink not referenced" errors from rstcheck, but
trying to follow the directions in the manual I added a setting "--ignore-errors REGEX_STRING" but no
luck. So I want back into settings restructuredtext: Linters: Disabled-linters, and disabled rstcheck.
This caused restructuedtext to start asking to load the restructuredtext_lint package, so I installed
that with pipmanager. It is there now.
* DAMN - Now it is using rst-lint, a brain damaged linter that doesn't know some of the directives
  like .. only:: So I want back and disabled that one. GRRRRR Now it wants doc8. So I installed that with pip.
  HOORAY!!! It is using doc8. This one has ways of controlling the errors and other  stuff. See the
  VSCode settings restructuredtext.linter.doc8.extraArgs and remove the rstcheck shit. Right below
  in the JSON are the disabling items. I must hve done this before (dump rstcheck and rst-lint).
  Anyway doc8 is finding my errors in real time.

03-Jan-2023
-----------
* It is OK to make Sphinx docs on the command line if you deactivate the .venv. That's enough
  for now till I decide to get into another wrestling match with version conflicts. TRhe older
  versions of packages in the global site-packages all seems to work so DON'T TOUCH IT!!!
* === OH!! ALong the lower left of the VSCode status bar, there is a selector for the Sphinx path!!
  I never saw this. It was set to use <docutils> but I changed it to use Sphinx with the conf.py
  info. Maybe this will remove some of the inscrutable linting stuff.
  One of the effects is to add this wo the workspace level settings:
  		"esbonio.sphinx.confDir": "${workspaceFolder}/docs/source",
  This makes me realize that esbonio can benefit from not guessing, and that this is project-specific,
  so now I will commit the alpaca-device.code-workspace to the Git repo, along with the thunder-tests
  in order to create a portable dev environment.
* Shit, esbonio is now building into docs/source/_build instead of docs/build. This is with the
  .venv deactivated. Is there no end to the surprises and side effects?
  + OK, I have now set up the workspace settings so that esbonio builds into
    docs/build/_esbonio/ (doctrees and html), and also Sphinx builds into docs/build
    (doctrees and html).
      "settings": {
        "esbonio.sphinx.confDir": "${workspaceFolder}/docs/source",
        "esbonio.sphinx.buildDir": "${workspaceFolder}/docs/build/_esbonio"
      }
    This makes it easy to .gitignore the esbonio output while keeping it separate from the
    actual Sphinx final build output for HTML and rinoh/PDF.

16-Jan-2023
-----------

**************************************
** RESET ON VENV VS GLOBAL ON LINUX **
**************************************
* Create new .venv2, then activate in VSCode. NOTE: The only way to get this to sork with the 'select interpreter' on the status bar is to first pick "AlpycaDevice ~/Documents" then in the new Select Interpreter list select the one you want!
  + Install only falcon and toml, update pip and setuptools.
  + DEVELOP WITH .venv2
  + When documenting, in VSCode select the global environment which has all of the shit. THIS WORKS including linting.
  + Simply deactivating in the terminal DOES NOT WORK if VSCode is set to .venv2, since the linters etc. aren't instaled.
================
== CONCLUSION ==
================
* Coding and testing, have VSCode set for .venv2
* Working on docs, have VSCode set for Global site-packages
-- Update Sphinx and linters --
1. PipMgr Update Sphinx to 6.1.3 - Build OK after removing contents of /build folder (old pickled). esbonio OK 6.1.3
2. PipMgr Update Doc8 to 1.1.1
3. PipMgr update rstcheck -> 6.1.1 and rstcheck-core to 1.0.3
4. PipMgr Update sphinx-autodoc-typehints to 1.21.1, sphinx jinja-compat to 0.2.0, sphinx-rtd-theme to 1.1.1
   sphinx-tabs to 3.4.1, sphinx-toolbox to 3.3.0 -->> SHIT SPHINX IS NOW BACK AT 4.5.0 ?!?!?!?!?
5. PipMgr Refresh, Update Sphinx to 6.1.3, and again sphinx-autodoc-typehints to 1.21.1, DOCS OK.
6. Update zope.interface to 5.5.2 (fron dev version)

17-Jan-2023
<<<<<<< HEAD
===========
* Renamed the repo AlpycaDevice. Renamed root folders on Linux and Windows, adjusted the virtual environment activation scripts
* Removed the messy .venv on Linux and renamed .venv2 from yesterday to .venv. Develop with .venv, do docs with global.
=======
-----------
* Rename repo and project root directories to AlpycaDevice.
  + Rename repo on GitHub
  + Rename root on Windows, fix up .venv/Scripts/activate scripts (multiple).
  == Painless on Windows, the .venv activates as before and GitHub still OK ==
>>>>>>> 92c3ca660fc66867c4791b0c740aa7d8b23bee5d

* Ideas for writing:
Three types of exceptions here:
  1. Errors in the HTTP request itself -> 400 or 404
  2. Device operational errors RunTimeError -> Alpaca DeviceException and detailed message with -> 200 -> logged also
  3. Python uncaught exception in the Falcon responder class -> 500 -> Logged also
  4. Python uncaught exception in the app outside Falcon -> Logged and possible app death.
